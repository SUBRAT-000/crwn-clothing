{"ast":null,"code":"import _objectSpread from\"D:/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import CartActionTypes from'./cart.types';import{addItemToCart}from'./cart.utils';var INITIAL_STATE={hidden:true,cartItems:[]};var cartReducer=function cartReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:INITIAL_STATE;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CartActionTypes.TOGGLE_CART_HIDDEN:return _objectSpread(_objectSpread({},state),{},{hidden:!state.hidden});case CartActionTypes.ADD_ITEM:return _objectSpread(_objectSpread({},state),{},{cartItem:addItemToCart(state.cartItems,action.payload)});case CartActionTypes.CLEAR_ITEM_FROM_CART:return _objectSpread(_objectSpread({},state),{},{cartItems:state.cartItems.filter(function(cartItem){return cartItem.id!==action.payload.id;})});default:return state;}};export default cartReducer;","map":{"version":3,"sources":["D:/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","cartItem","payload","CLEAR_ITEM_FROM_CART","filter","id"],"mappings":"sIAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAASC,aAAT,KAA8B,cAA9B,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,MAAM,CAAE,IADU,CAElBC,SAAS,CAAC,EAFQ,CAAtB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BJ,aAA0B,IAAXK,CAAAA,MAAW,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKR,CAAAA,eAAe,CAACS,kBAArB,CACI,sCACOH,KADP,MAEIH,MAAM,CAAE,CAACG,KAAK,CAACH,MAFnB,GAIJ,IAAKH,CAAAA,eAAe,CAACU,QAArB,CACI,sCACOJ,KADP,MAEIK,QAAQ,CAAEV,aAAa,CAACK,KAAK,CAACF,SAAP,CAAkBG,MAAM,CAACK,OAAzB,CAF3B,GAIJ,IAAKZ,CAAAA,eAAe,CAACa,oBAArB,CACI,sCACOP,KADP,MAEIF,SAAS,CAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CACP,SAAAH,QAAQ,QAAIA,CAAAA,QAAQ,CAACI,EAAT,GAAgBR,MAAM,CAACK,OAAP,CAAeG,EAAnC,EADD,CAFf,GAMJ,QACI,MAAOT,CAAAA,KAAP,CAnBR,CAqBH,CAtBD,CAuBA,cAAeD,CAAAA,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\r\nimport { addItemToCart } from './cart.utils'\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems:[]\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            };\r\n        case CartActionTypes.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItem: addItemToCart(state.cartItems, action.payload)\r\n            };\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    cartItem => cartItem.id !== action.payload.id\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default cartReducer;\r\n\r\n    \r\n"]},"metadata":{},"sourceType":"module"}