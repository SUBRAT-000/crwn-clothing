{"ast":null,"code":"import _regeneratorRuntime from\"D:/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"D:/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyA7O7uP8zs1CdYVnRs2mAb6Vu8Wtxx7u68\",authDomain:\"crwn-db-9383d.firebaseapp.com\",databaseURL:\"https://crwn-db-9383d-default-rtdb.firebaseio.com\",projectId:\"crwn-db-9383d\",storageBucket:\"crwn-db-9383d.appspot.com\",messagingSenderId:\"69460396403\",appId:\"1:69460396403:web:fa6970394393647e02dd06\",measurementId:\"G-TXEHY6DLYQ\"};firebase.initializeApp(config);export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createAt:createAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["D:/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createAt","Date","set","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"iZAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,+BAFD,CAGXC,WAAW,CAAE,mDAHF,CAIXC,SAAS,CAAE,eAJA,CAKXC,aAAa,CAAE,2BALJ,CAMXC,iBAAiB,CAAE,aANR,CAOXC,KAAK,CAAE,0CAPI,CAQXC,aAAa,CAAE,cARJ,CAAf,CAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB,EAEA,MAAO,IAAMU,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,qKAChCD,QADgC,iEAG/BE,OAH+B,CAGrBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHqB,uBAKdH,CAAAA,OAAO,CAACI,GAAR,EALc,QAK/BC,QAL+B,kBAOhCA,QAAQ,CAACC,MAPuB,0BAQzBC,WARyB,CAQFT,QARE,CAQzBS,WARyB,CAQZC,KARY,CAQFV,QARE,CAQZU,KARY,CAS3BC,QAT2B,CAShB,GAAIC,CAAAA,IAAJ,EATgB,wCAWvBV,CAAAA,OAAO,CAACW,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,QAAQ,CAARA,QAHE,EAICV,cAJD,EAXuB,0FAkB7Ba,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAlB6B,wCAsB9Bd,OAtB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAyBP,MAAO,IAAMkB,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CACP,MAAO,IAAMd,CAAAA,SAAS,CAAGf,QAAQ,CAACe,SAAT,EAAlB,CAEP,GAAMe,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyA7O7uP8zs1CdYVnRs2mAb6Vu8Wtxx7u68\",\r\n    authDomain: \"crwn-db-9383d.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-db-9383d-default-rtdb.firebaseio.com\",\r\n    projectId: \"crwn-db-9383d\",\r\n    storageBucket: \"crwn-db-9383d.appspot.com\",\r\n    messagingSenderId: \"69460396403\",\r\n    appId: \"1:69460396403:web:fa6970394393647e02dd06\",\r\n    measurementId: \"G-TXEHY6DLYQ\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n   \r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth;\r\n        const createAt = new Date();\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createAt,\r\n                ...additionalData\r\n            });\r\n        } catch (error) {\r\n            console.log('error creating user', error.message);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}